class Solution {
public:
    /**
     * @param matrix: a matrix
     * @return: the minimum height
     */
    int minPathSumII(vector<vector<int>> &matrix) {
        // Write your code here
        int M=matrix.size(),N=matrix[0].size();
        vector<vector<int>> res(M,vector<int> (N,0));
        res[M-1][0]=matrix[M-1][0];
        for (int i=1;i<N;++i){
            res[M-1][i]=res[M-1][i-1]+matrix[M-1][i];
        }
        for (int i=M-2;i>=0;--i){
            res[i][0]=res[i+1][0]+matrix[i][0];
        }
        for (int i=M-2;i>=0;--i){
            for (int j=1;j<N;++j){
                res[i][j]=min(res[i+1][j],res[i][j-1])+matrix[i][j];
            }
        }
        return res[0][N-1];
    }
};
