class Solution {
public:
    /**
     * @param numbers: An array of Integer
     * @param target: target = numbers[index1] + numbers[index2]
     * @return: [index1 + 1, index2 + 1] (index1 < index2)
     */
    vector<int> twoSum(vector<int> &numbers, int target) {
        // write your code here
        unordered_map<int,int> res;
        for (int i=0;i<numbers.size();i++){
            res[target-numbers[i]]=i;
        }
        // for (unordered_map<int,int>::iterator itr=res.begin();itr!=res.end();itr++){
        //     cout<<itr->first<<" "<<itr->second<<endl;
        // }
        for (int i=0;i<numbers.size();i++){
            unordered_map<int,int>::iterator itr=res.find(numbers[i]);
            
            if (itr!=res.end()){
                
                vector<int> tmp{i,itr->second};
                sort(tmp.begin(),tmp.end());
                return tmp;
            }
        }
        vector<int> tmp;
        return tmp;
    }
};
