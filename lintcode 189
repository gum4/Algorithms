class Solution {
public:
    /**
     * @param A: An array of integers
     * @return: An integer
     */
    
    void swap(vector<int>& A, int i, int j){
        int tmp;
        tmp=A[i];
        A[i]=A[j];
        A[j]=tmp;
    }
    int firstMissingPositive(vector<int> &A) {
        // write your code here
        if (A.size()==0) return 1;
        for (unsigned int i=0;i<A.size();i++){
            //直到：
            //第i个位置上的数比1小 或者
            //第<第i个位置上的数-1>个数和第i 个数一样大  或者
            //第i个位置上的数-1超出边界
            while (A[i]>=1&&A[A[i]-1]!=A[i]&&A[i]-1<A.size()){
                swap(A,i,A[i]-1);
            }
        }
        for (unsigned int i=0;i<A.size();i++){
            cout<<A[i]<<" ";
        }
        cout<<endl;
        for (unsigned int i=0;i<A.size();i++){
            if (A[i]!=i+1) return i+1;
        }
        return A.size()+1;
    }
};
