class Solution {
public:
    /**
     * @param board: the given board
     * @return:  the least number of moves required so that the state of the board is solved
     */
    int MIN=INT_MAX;
    void swap (vector<vector<int>> &board, int i1, int j1, int i2, int j2){
        int tmp=board[i2][j2];
        board[i2][j2]=board[i1][j1];
        board[i1][j1]=tmp;
    }
    bool within ( int i, int j){
        return 0<=i&&i<=1&&0<=j&&j<=2;
    }
    void helper(vector<vector<int>> &board,set<vector<vector<int>>>& S, int i, int j, vector<int> &sums,int &sum){
        // cout<<i<<" "<<j<<endl;
        // for (int i=0;i<2;i++){
        //     for (int j=0;j<3;j++){
        //         cout<<board[i][j]<<" ";
        //     }
        //     cout<<endl;
        // }
        int dir[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
        if (board[0][0]==1&&board[0][1]==2&&board[0][2]==3&&board[1][0]==4&&board[1][1]==5&&board[1][2]==0){
            sums.push_back(sum);

            MIN=min(MIN,sum);
            return;
        }
        for (int k=0;k<4;k++){
            int I=i+dir[k][0],J=j+dir[k][1];
            if (!within(I,J)) continue;
            swap(board,i,j,I,J);
            // if (S.find(board)!=S.end()) {
            //     swap(board,i,j,I,J);
            //     continue;
            // }
            sum++;
            S.insert(board);
            helper(board,S,I,J,sums,sum);
            sum--;
            swap(board,i,j,I,J);

        }
    }
    int slidingPuzzle(vector<vector<int>> &board) {
        // write your code here
        int loc1,loc2;
        for (int i=0;i<2;i++){
            for (int j=0;j<3;j++){
                if (board[i][j]==0){
                    loc1=i;
                    loc2=j;
                    break;
                }
            }
        }
        set<vector<vector<int>> > S;
        S.insert(board);
        int sum=0;
        vector<int> sums;
        helper(board,S,loc1,loc2,sums,sum);
        // for (set<vector<vector<int>> >::iterator itr=S.begin();itr!=S.end();itr++){
        //     vector<vector<int>> tmp=*itr;
        //     for (int i=0;i<2;i++){
        //         for (int j=0;j<3;j++){
        //             cout<<tmp[i][j]<<" ";
        //         }
        //         cout<<endl;
        //     }
        //     cout<<endl;
        // }
        if (MIN==INT_MAX) return -1;
        return MIN;
    }
};
