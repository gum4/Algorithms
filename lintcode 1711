class Solution {
public:
    /**
     * @param A: the given array
     * @return: the minimum sum of a falling path
     */
    int minFallingPathSum(vector<vector<int>> &A) {
        // Write your code here
        int m=A.size();
        int n=A[0].size();
        vector<vector<int>> res(m,vector<int> (n,0));
        
        for (int j=0;j<n;j++){
            res[0][j]=A[0][j];
        }
        for (int i=1;i<m;i++){
            res[i][0]=A[i][0]+min(res[i-1][0],res[i-1][1]);
            for(int j=1;j<n-1;j++){
                res[i][j]=A[i][j]+min(res[i-1][j-1],min(res[i-1][j],res[i-1][j+1]));
            }
            res[i][n-1]=A[i][n-1]+min(res[i-1][n-2],res[i-1][n-1]);
        }
        int MIN=res[m-1][0];
        for (int j=1;j<n;j++){
            MIN=min(MIN,res[m-1][j]);
        }
        return MIN;
    }
};
