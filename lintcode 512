class Solution {
public:
    /**
     * @param s: a string,  encoded message
     * @return: an integer, the number of ways decoding
     */
     
    int helper (string s){
        cout<<s<<endl;
        if (s=="") return 1;
        if (s.length()==1) {
            if (s=="0") return 0;
            return 1;
        }
        if (s[0]=='0') return 0;
        int res=0;
        for (int i=0;i<s.length()&&stoi(s.substr(0,i+1))<=26;i++){
            res+=helper(s.substr(i+1));
        }
        return res;
    }
    int numDecodings(string &s) {
        // write your code here
        if (s=="") return 0;
        if (s=="0") return 0;
        int n=s.length();
        vector<int> V(n+1,0);
        V[n]=1;
        V[n-1]=s[n-1]=='0'?0:1;
        for (int i=n-2;i>=0;i--){
            V[i]=0;
            if (s[i]=='0') continue;
            for (int j=i+1;j<n+1&&stoi(s.substr(i,j-i))<=26;j++){
                V[i]+=V[j];
            }
        }
        return V[0];
    }
};
