class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> res;
        deque<int> q;
        for (int i = 0; i < nums.size(); ++i) {
            // for (int j=0;j<q.size();j++){
            //     cout<<q[j]<<" ";
            // }
            // cout<<"///"<<i<<endl;
            //q首元素不在当前窗口覆盖范围内
            if (!q.empty() && q.front() == i - k) {
                q.pop_front();
            }
            //确保q首元素是最大，把新加的元素前的比他小的元素下标除掉
            while (!q.empty() && nums[q.back()] < nums[i]) q.pop_back();
            q.push_back(i);
            if (i >= k - 1) res.push_back(nums[q.front()]);
        }
        return res;
    }
};
